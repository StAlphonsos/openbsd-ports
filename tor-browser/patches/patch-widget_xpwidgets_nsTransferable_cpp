$OpenBSD$

diff -Nup mozilla-esr31/widget/xpwidgets/nsTransferable.cpp tor-browser/widget/xpwidgets/nsTransferable.cpp
--- widget/xpwidgets/nsTransferable.cpp.orig	Mon Jan  5 23:08:07 2015
+++ widget/xpwidgets/nsTransferable.cpp	Tue Feb 17 14:37:57 2015
@@ -56,19 +56,20 @@ DataStruct::~DataStruct() 
 
 //-------------------------------------------------------------------------
 void
-DataStruct::SetData ( nsISupports* aData, uint32_t aDataLen )
+DataStruct::SetData ( nsISupports* aData, uint32_t aDataLen, bool aIsPrivBrowsing )
 {
   // Now, check to see if we consider the data to be "too large"
-  if (aDataLen > kLargeDatasetSize) {
+  // as well as ensuring that private browsing mode is disabled
+  if (aDataLen > kLargeDatasetSize && !aIsPrivBrowsing) {
     // if so, cache it to disk instead of memory
     if ( NS_SUCCEEDED(WriteCache(aData, aDataLen)) )
       return;
     else
-			NS_WARNING("Oh no, couldn't write data to the cache file");   
-  } 
+      NS_WARNING("Oh no, couldn't write data to the cache file");
+  }
 
   mData    = aData;
-  mDataLen = aDataLen;  
+  mDataLen = aDataLen;
 }
 
 
@@ -401,7 +402,7 @@ nsTransferable::SetTransferData(const char *aFlavor, n
   for (i = 0; i < mDataArray.Length(); ++i) {
     DataStruct& data = mDataArray.ElementAt(i);
     if ( data.GetFlavor().Equals(aFlavor) ) {
-      data.SetData ( aData, aDataLen );
+      data.SetData ( aData, aDataLen, mPrivateData );
       return NS_OK;
     }
   }
@@ -417,7 +418,7 @@ nsTransferable::SetTransferData(const char *aFlavor, n
         nsCOMPtr<nsISupports> ConvertedData;
         uint32_t ConvertedLen;
         mFormatConv->Convert(aFlavor, aData, aDataLen, data.GetFlavor().get(), getter_AddRefs(ConvertedData), &ConvertedLen);
-        data.SetData(ConvertedData, ConvertedLen);
+        data.SetData(ConvertedData, ConvertedLen, mPrivateData);
         return NS_OK;
       }
     }
