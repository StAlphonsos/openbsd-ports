$OpenBSD$

diff -Nup mozilla-esr31/dom/src/storage/DOMStorageCache.h tor-browser/dom/src/storage/DOMStorageCache.h
--- dom/src/storage/DOMStorageCache.h.orig	Mon Jan  5 23:08:05 2015
+++ dom/src/storage/DOMStorageCache.h	Tue Feb 17 14:37:55 2015
@@ -6,6 +6,7 @@
 #ifndef nsDOMStorageCache_h___
 #define nsDOMStorageCache_h___
 
+#include "nsIURI.h"
 #include "nsIPrincipal.h"
 #include "nsITimer.h"
 
@@ -72,7 +73,8 @@ class DOMStorageCache : public DOMStorageCacheBridge (
   DOMStorageCache(const nsACString* aScope);
   virtual ~DOMStorageCache();
 
-  void Init(DOMStorageManager* aManager, bool aPersistent, nsIPrincipal* aPrincipal,
+  void Init(DOMStorageManager* aManager, bool aPersistent,
+            nsIURI* aFirstPartyIsolationURI, nsIPrincipal* aPrincipal,
             const nsACString& aQuotaScope);
 
   // Copies all data from the other storage.
@@ -97,6 +99,8 @@ class DOMStorageCache : public DOMStorageCacheBridge (
 
   nsTArray<nsString>* GetKeys(const DOMStorage* aStorage);
 
+  nsIURI* FirstPartyIsolationURI() const { return mFirstPartyIsolationURI; }
+
   // Whether the principal equals principal the cache was created for
   bool CheckPrincipal(nsIPrincipal* aPrincipal) const;
   nsIPrincipal* Principal() const { return mPrincipal; }
@@ -177,6 +181,9 @@ class DOMStorageCache : public DOMStorageCacheBridge (
 
   // Timer that holds this cache alive for a while after it has been preloaded.
   nsCOMPtr<nsITimer> mKeepAliveTimer;
+
+  // The first party URI associated with this cache.
+  nsCOMPtr<nsIURI> mFirstPartyIsolationURI;
 
   // Principal the cache has been initially created for, this is used only
   // for sessionStorage access checks since sessionStorage objects are strictly
