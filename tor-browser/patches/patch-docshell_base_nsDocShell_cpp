$OpenBSD$

diff -Nup mozilla-esr31/docshell/base/nsDocShell.cpp tor-browser/docshell/base/nsDocShell.cpp
--- docshell/base/nsDocShell.cpp.orig	Mon Jan  5 23:08:02 2015
+++ docshell/base/nsDocShell.cpp	Tue Feb 17 14:37:55 2015
@@ -167,6 +167,7 @@
 #include "nsIChannelPolicy.h"
 #include "nsIContentSecurityPolicy.h"
 #include "nsSandboxFlags.h"
+#include "mozIThirdPartyUtil.h"
 #include "nsXULAppAPI.h"
 #include "nsDOMNavigationTiming.h"
 #include "nsISecurityUITelemetry.h"
@@ -2799,14 +2800,29 @@ nsDocShell::GetSessionStorageForPrincipal(nsIPrincipal
         return NS_ERROR_UNEXPECTED;
     }
 
+    nsCOMPtr<mozIThirdPartyUtil> thirdPartyUtil =
+                            do_GetService(THIRDPARTYUTIL_CONTRACTID);
+    if (!thirdPartyUtil)
+      return NS_ERROR_FAILURE;
+
+    nsCOMPtr<nsIDocument> doc(do_GetInterface(GetAsSupports(this)));
+    nsCOMPtr<nsIURI> firstPartyIsolationURI;
+    nsresult rv = thirdPartyUtil->GetFirstPartyIsolationURI(nullptr, doc,
+                                           getter_AddRefs(firstPartyIsolationURI));
+    NS_ENSURE_SUCCESS(rv, rv);
+
     if (aCreate) {
-        return manager->CreateStorage(aPrincipal, aDocumentURI,
+        return manager->CreateStorageForFirstParty(firstPartyIsolationURI,
+                                      aPrincipal, aDocumentURI,
                                       mInPrivateBrowsing, aStorage);
     }
 
-    return manager->GetStorage(aPrincipal, mInPrivateBrowsing, aStorage);
+    return manager->GetStorageForFirstParty(firstPartyIsolationURI, aPrincipal,
+                                            mInPrivateBrowsing, aStorage);
 }
 
+// Bacause it is not called from anywhere, nsDocShell::AddSessionStorage()
+// does not need to be modified to isolate DOM Storage to the first party URI.
 nsresult
 nsDocShell::AddSessionStorage(nsIPrincipal* aPrincipal,
                               nsIDOMStorage* aStorage)
